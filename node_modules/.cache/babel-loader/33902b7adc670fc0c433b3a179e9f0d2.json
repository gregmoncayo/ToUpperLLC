{"ast":null,"code":"import _classCallCheck from \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/src/components/Sidebar/Sidebar.jsx\";\n\n/*!\n\n* Coded by Gregory Moncayo\n\n=========================================================\n\n* The above is copyright by ToUpper LLC.\n\n*/\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, CardTitle, Collapse, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Media, NavbarBrand, Navbar, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\nvar ps;\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n    _this.state = {\n      collapseOpen: false\n    };\n\n    _this.toggleCollapse = function () {\n      _this.setState({\n        collapseOpen: !_this.state.collapseOpen\n      });\n    };\n\n    _this.closeCollapse = function () {\n      _this.setState({\n        collapseOpen: false\n      });\n    };\n\n    _this.createLinks = function (routes) {\n      return routes.map(function (prop, key) {\n        return React.createElement(NavItem, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: prop.layout + prop.path,\n          tag: NavLinkRRD,\n          onClick: _this.closeCollapse,\n          activeClassName: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: prop.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), prop.name));\n      });\n    };\n\n    _this.activeRoute.bind(_assertThisInitialized(_this));\n\n    return _this;\n  } // verifies if routeName is the one active (in browser input)\n\n\n  _createClass(Sidebar, [{\n    key: \"activeRoute\",\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    } // toggles collapse between opened and closed (true/false)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          routes = _this$props.routes,\n          logo = _this$props.logo;\n      var navbarBrandProps;\n\n      if (logo && logo.innerLink) {\n        navbarBrandProps = {\n          to: logo.innerLink,\n          tag: Link\n        };\n      } else if (logo && logo.outterLink) {\n        navbarBrandProps = {\n          href: logo.outterLink,\n          target: \"_blank\"\n        };\n      }\n\n      return React.createElement(Navbar, {\n        className: \"navbar-vertical fixed-left navbar-light bg-white\",\n        expand: \"md\",\n        id: \"sidenav-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        onClick: this.toggleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), logo ? React.createElement(NavbarBrand, Object.assign({\n        className: \"pt-0\"\n      }, navbarBrandProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        alt: logo.imgAlt,\n        className: \"navbar-brand-img\",\n        src: logo.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })) : null, React.createElement(Collapse, {\n        navbar: true,\n        isOpen: this.state.collapseOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-collapse-header d-md-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, logo ? React.createElement(Col, {\n        className: \"collapse-brand\",\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, logo.innerLink ? React.createElement(Link, {\n        to: logo.innerLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: logo.imgAlt,\n        src: logo.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })) : React.createElement(\"a\", {\n        href: logo.outterLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: logo.imgAlt,\n        src: logo.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))) : null, React.createElement(Col, {\n        className: \"collapse-close\",\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        onClick: this.toggleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))))), React.createElement(Form, {\n        className: \"mt-4 mb-3 d-md-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"input-group-rounded input-group-merge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Input, {\n        \"aria-label\": \"Search\",\n        className: \"form-control-rounded form-control-prepended\",\n        placeholder: \"Search\",\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))))), React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.createLinks(routes)), React.createElement(\"hr\", {\n        className: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        className: \"navbar-heading text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Profiles\"), React.createElement(Nav, {\n        className: \"mb-md-3\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"https://play.google.com/store/apps/developer?id=ToUpper+LLC&hl=en_US\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"ni ni-spaceship\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), \"Google Play Store\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"ni ni-palette\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), \"Apple App Store\"))))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["/Users/gregorymoncayo/Desktop/ToUpper LLC/WebSite/src/components/Sidebar/Sidebar.jsx"],"names":["React","NavLink","NavLinkRRD","Link","PropTypes","Button","Card","CardHeader","CardBody","CardTitle","Collapse","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Media","NavbarBrand","Navbar","NavItem","Nav","Progress","Table","Container","Row","Col","ps","Sidebar","props","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","path","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","bgColor","logo","navbarBrandProps","innerLink","to","tag","outterLink","href","target","imgAlt","imgSrc","Component","defaultProps","propTypes","arrayOf","object","shape","string","isRequired"],"mappings":"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","sourcesContent":["/*!\n\n* Coded by Gregory Moncayo\n\n=========================================================\n\n* The above is copyright by ToUpper LLC.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          \n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            <h6 className=\"navbar-heading text-muted\">Profiles</h6>\n            {/* Navigation */}\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://play.google.com/store/apps/developer?id=ToUpper+LLC&hl=en_US\">\n                  <i className=\"ni ni-spaceship\" />\n                  Google Play Store\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"ni ni-palette\" />\n                  Apple App Store\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}